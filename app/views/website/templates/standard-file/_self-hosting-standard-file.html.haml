%p These instructions make the following assumptions:
%ul
  %li
    %p
      You’ve just finished using the AWS web console to launch an EC2 server with a 64 bit version of Amazon Linux AMI with
      = succeed "." do
        %strong at least 1GB of memory
  %li
    %p You’ve configured your security groups to allow for incoming SSH connections from your local IP.
  %li
    %p You’ve configured a domain name (or subdomain) to point to your server’s IP address.
%p
  Note: you can skip most of these steps by using our public AMI. See this guide for more details:
  %a{:href => "https://github.com/standardfile/ruby-server/wiki/Deploying-a-Standard-File-server-on-AWS-with-a-pre-configured-image"} Deploying a Standard File server on AWS with a pre configured image
%h3 Getting started
%ol
  %li
    %p SSH into your new server with the keys you should have received after launching an instance:
    %pre
      %code
        :preserve
          ssh -i /path/to/key.pem ec2-user@domain.com
  %li
    %p Update your system:
    %pre
      %code
        :preserve
          sudo yum update
  %li
    %p Install RVM (Ruby Version Manager):
    %pre
      %code
        :preserve
          gpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3

          \curl -sSL https://get.rvm.io | bash -s stable
  %li
    %p Begin using RVM in current session:
    %pre
      %code
        :preserve
          source /home/ec2-user/.rvm/scripts/rvm
  %li
    %p Install Ruby
    %pre
      %code
        :preserve
          rvm install ruby
    %p This should install the latest version of ruby (2.3 at the time of this writing.)
    %p
      %em Note that at least Ruby 2.2.2 is required for Rails 5.
  %li
    %p Use Ruby
    %pre
      %code
        :preserve
          rvm use ruby
  %li
    %p Install Bundler:
    %pre
      %code
        :preserve
          gem install bundler --no-ri --no-rdoc
  %li
    %p Install MySQL (optional; you can also use a hosted db through Amazon RDS, which is recommended):
    %pre
      %code
        :preserve
          sudo yum install mysql56-server
          sudo service mysqld start
          sudo mysql_secure_installation
          sudo yum install mysql-devel
          sudo chkconfig mysqld on
    %p Create a database:
    %pre
      %code
        :preserve
          mysql -u root -p
          > create database standard_file;
          > quit;
  %li
    %p Install Passenger:
    %pre
      %code
        :preserve
          sudo yum install rubygems
          gem install rubygems-update --no-rdoc --no-ri
          update_rubygems
          gem install passenger --no-rdoc --no-ri
  %li
    %p Remove system Nginx installation if installed (you’ll use Passenger’s instead):
    %pre
      %code
        :preserve
          sudo yum remove nginx
          sudo rm -rf /etc/nginx
  %li
    %p Configure Passenger:
    %pre
      %code
        :preserve
          sudo chmod o+x "/home/ec2-user"
          sudo yum install libcurl-devel
          rvmsudo passenger-install-nginx-module
          rvmsudo passenger-config validate-install
  %li
    %p Install Git:
    %pre
      %code
        :preserve
          sudo yum install git
  %li
    %p
      Set up HTTPS/SSL for your server (free using LetsEncrypt) (required if using the secure client on
      = succeed "):" do
        %a{:href => "https://app.standardnotes.org"} https://app.standardnotes.org
    %pre
      %code
        :preserve
          sudo chown ec2-user /opt
          cd /opt
          git clone https://github.com/letsencrypt/letsencrypt
          cd letsencrypt
    %p Run the setup wizard:
    %pre
      %code
        :preserve
          ./letsencrypt-auto certonly --standalone --debug
    %p
      Note the location of the certificates, typically
      %code /etc/letsencrypt/live/domain.com/fullchain.pem
  %li
    %p Configure Nginx:
    %pre
      %code
        :preserve
          sudo vim /opt/nginx/conf/nginx.conf
    %p
      Add this to the bottom of the file,
      %em inside
      the last curly brace:
    %pre
      %code
        :preserve
          server {
              listen 443 ssl default_server;
              ssl_certificate /etc/letsencrypt/live/domain.com/fullchain.pem;
              ssl_certificate_key /etc/letsencrypt/live/domain.com/privkey.pem;
              server_name domain.com;
              passenger_enabled on;
              passenger_app_env production;
              root /home/ec2-user/ruby-server/public;
            }
  %li
    %p
      Make sure you are in your home directory and clone the Standard File
      %a{:href => "https://github.com/standardfile/ruby-server"} ruby-server
      project:
    %pre
      %code
        :preserve
          cd ~
          git clone https://github.com/standardfile/ruby-server.git
          cd ruby-server
  %li
    %p Setup project:
    %pre
      %code
        :preserve
          bundle install
          bower install
          rails assets:precompile
  %li
    %p Create a .env file for your environment variables. The Rails app will automatically load these when it starts.
    %pre
      %code
        :preserve
          vim .env
    %p Insert:
    %pre
      %code
        :preserve
          RAILS_ENV=production
          SECRET_KEY_BASE=use "bundle exec rake secret"

          DB_HOST=localhost
          DB_PORT=3306
          DB_DATABASE=standard_file
          DB_USERNAME=root
          DB_PASSWORD=

          SALT_PSEUDO_NONCE=use "bundle exec rake secret"
  %li
    %p Setup database:
%pre
  %code
    :preserve
      rails db:migrate
%ol
  %li
    %p Start Nginx:
    %pre
      %code
        :preserve
          sudo /opt/nginx/sbin/nginx
    %p Tip: you will need to restart Nginx whenever you make changes to your environment variables or the Nginx configuration:
    %pre
      %code
        :preserve
          sudo /opt/nginx/sbin/nginx -s reload
  %li
    %p You’re done!
%h2 Using your new server
%p
  You can immediately start using your new server by using the Standard Notes app at
  = succeed "." do
    %a{:href => "https://app.standardnotes.org"} https://app.standardnotes.org
%p In the account menu, enter the address of your new server and press Change Server:
%p
  %img{:alt => "sn-account-menu", :src => "http://imgur.com/Pre6ffL.png"}/
%p Then, register for a new account, and begin using your private new secure Standard File server!
